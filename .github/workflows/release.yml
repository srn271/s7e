name: Release

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run linter
      run: npm run lint

    - name: Build project
      run: npm run build

    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Bump version
      run: npm version ${{ github.event.inputs.release-type }} --no-git-tag-version

    - name: Update package.json to public
      run: |
        npm pkg set private=false

    - name: Get package version
      id: package-version
      run: echo "version=$(npm pkg get version | tr -d '"')" >> $GITHUB_OUTPUT

    - name: Commit version bump
      run: |
        git add package.json
        git commit -m "chore: bump version to ${{ steps.package-version.outputs.version }}"
        git tag "v${{ steps.package-version.outputs.version }}"

    - name: Push changes
      run: |
        git push origin main
        git push origin "v${{ steps.package-version.outputs.version }}"

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ steps.package-version.outputs.version }}"
        name: "Release v${{ steps.package-version.outputs.version }}"
        draft: false
        prerelease: ${{ github.event.inputs.release-type == 'prerelease' }}
        generate_release_notes: true

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Revert package.json to private
      if: always()
      run: |
        git checkout package.json
